[package]
name = "c-scape"
version = "0.3.1-alpha.0"
authors = [
    "Dan Gohman <dev@sunfishcode.online>",
]
description = "A libc implementation in Rust"
documentation = "https://docs.rs/c-scape"
license = "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT"
repository = "https://github.com/sunfishcode/mustang"
edition = "2018"

[dependencies]
libm = "0.2.1"
rustix = { version = "0.31.0", default-features = false, features = ["itoa"] }
memoffset = "0.6"
realpath-ext = { version = "0.1.0", default-features = false }
memchr = { version = "2.4.1", default-features = false }
sync-resolve = { version = "0.3.0", optional = true }
origin = { path = "../origin", default-features = false, features = ["parking_lot_core", "raw_dtors", "set_thread_id"], version = "^0.3.1-alpha.0"}
parking_lot = { git = "https://github.com/sunfishcode/parking_lot", branch = "mustang", optional = true }
log = { version = "0.4.14", default-features = false }
# We use the libc crate for C ABI types and constants, but we don't depend on
# the actual platform libc.
libc = { version = "0.2.108", default-features = false }
errno = { version = "0.2.8", default-features = false }

[build-dependencies]
# Enable the cc dependency to build aarch64_outline_atomics from source
# instead of using the prebuilt libraries.
cc = { version = "1.0.68", optional = true }

[dev-dependencies]
libc = "0.2.99"
static_assertions = "1.1.0"
paste = "1.0.5"
once_cell = "1.8.0"

[features]
default = ["threads", "resolve", "net"]
threads = ["origin/threads", "parking_lot"]
resolve = ["sync-resolve", "std"]
std = ["rustix/std"]
net = []
