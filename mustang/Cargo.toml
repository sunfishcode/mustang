[package]
name = "mustang"
version = "0.3.1-alpha.0"
authors = [
    "Dan Gohman <dev@sunfishcode.online>",
]
description = "Rust programs written entirely in Rust"
documentation = "https://docs.rs/mustang"
license = "Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT"
repository = "https://github.com/sunfishcode/mustang"
edition = "2018"

[build-dependencies]
# Enable the cc dependency to build the empty `libc.a` and similar libraries
# from the empty.s source file, instead of using the prebuilt libraries.
cc = { version = "1.0.68", optional = true }

[dependencies]
# A general-purpose `global_allocator` implementation.
dlmalloc = { version = "0.2", features = ["global"], optional = true }
# A small `global_allocator` implementation.
wee_alloc = { version = "0.4", optional = true }

# Enable "libc" and don't depend on "spin".
# TODO: Eventually, we should propose a `fde-phdr-rustix` backend option to
# upstream `unwinding` so that it doesn't need to go through `dl_iterate_phdr`,
# but `fde-phdr-dl` works for now.
[target.'cfg(not(target_arch = "arm"))'.dependencies.unwinding]
version = "0.1.3"
default-features = false
features = [
    "unwinder",
    "dwarf-expr",
    "hide-trace",
    "fde-phdr-dl",
    "fde-registry",
    "libc",
]

[target.'cfg(target_vendor = "mustang")'.dependencies]
origin = { path = "../origin", default-features = false, version = "^0.3.1-alpha.0"}
c-scape = { path = "../c-scape", version = "^0.3.1-alpha.0"}

[features]
default = ["default-alloc", "threads"]
default-alloc = ["dlmalloc"]
threads = ["origin/threads", "c-scape/threads"]
